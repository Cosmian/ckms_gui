---
name: KMS GUI build and push

on:
  push:
  # Also when triggered by another repo
  workflow_dispatch:
    inputs:
      kms_version:
        description: KMS version
        type: string
        default: '4.17.0'

jobs:
  kms-gui-build:
    name: Build on ${{ matrix.archive_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            prerequisites: |
              rustup target add x86_64-apple-darwin
            build: |
              cargo build --release --target x86_64-apple-darwin
            archive_name: ckms_gui_macos_intel
            ckms_gui: ./target/x86_64-apple-darwin/release/ckms_gui
          - os: macos-14
            prerequisites: |
              rustup target add aarch64-apple-darwin
            build: |
              cargo build --release --target aarch64-apple-darwin
            archive_name: ckms_gui_macos_arm
            ckms_gui: ./target/aarch64-apple-darwin/release/ckms_gui
          - os: ubuntu-22.04
            prerequisites: |
              sudo apt install librust-atk-sys-dev librust-gdk-sys-dev libssl-dev pkg-config
            build: |
              cargo build --release
            archive_name: ckms_gui_ubuntu_22_04
            ckms_gui: ./target/release/ckms_gui
          - os: ubuntu-24.04
            prerequisites: |
              sudo apt install libgtk-3-dev libglib2.0-dev libssl-dev pkg-config
            build: |
              cargo build --release
            archive_name: ckms_gui_ubuntu_24_04
            ckms_gui: ./target/release/ckms_gui

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-09
          components: rustfmt, clippy

      - name: Install prerequisites
        run: ${{ matrix.prerequisites }}

      - name: Build
        run: ${{ matrix.build }}
        env:
          VERSION: ${{ inputs.kms_version }}

      - name: Upload KMS for ${{ matrix.os }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ matrix.ckms_gui }}
          retention-days: 1
          if-no-files-found: error

  ##############################################################################
  ### Releases
  ##############################################################################
  release:
    name: release
    needs:
      - kms-gui-build
    runs-on: [self-hosted, not-sgx]
    container:
      image: cosmian/docker_doc_ci
      volumes:
        - /home/cosmian/.ssh/id_rsa:/root/.ssh/id_rsa

    strategy:
      fail-fast: false
      matrix:
        include:
          - archive_name: ckms_gui_macos_intel
          - archive_name: ckms_gui_macos_arm
          - archive_name: ckms_gui_ubuntu_22_04
          - archive_name: ckms_gui_ubuntu_24_04

    steps:
      - uses: actions/download-artifact@v3
      - run: find .

      - name: Creating zip to be attached to release
        run: |
          apt update -y
          apt-get install -y zip
          rm -f ${{ matrix.archive_name }}.zip
          zip -r ${{ matrix.archive_name }}.zip ${{ matrix.archive_name }}

      - name: Push to package.cosmian.com
        if: inputs.kms_version
        run: |
          set -x
          DESTINATION_DIR=/mnt/package/kms/$VERSION
          ssh -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa ${{ matrix.archive_name }}.zip cosmian@package.cosmian.com:$DESTINATION_DIR/
        env:
          VERSION: ${{ inputs.kms_version }}

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.archive_name }}.zip

  cleanup:
    needs:
      - release
    uses: Cosmian/reusable_workflows/.github/workflows/cleanup_cache.yml@develop
    secrets: inherit
